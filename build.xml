<?xml version="1.0" encoding="UTF-8"?>

<!-- Enter the name of the project -->
<project name="name-of-project" default="build">

<!-- Initiate properties -->
  <!-- ${basedir} already initialized to location of build.xml -->
  <property name="builddir" value="${basedir}/build" />

  <!-- 
    ** Location of the Creatuity Coding Standard 
    ** Used for PHPCS and PHPMD 
    -->
  <property name="codingstandard" value="/var/lib/jenkins/creatuity-code-standard" />
  
  <!-- 
    ** To ignore files enter files/directories as comma separated string
    ** If no files should be ignored, remove or comment out the ignore property
    ** Use the following as an example of how to format the ignore property
    -->
  <property name="ignore" value="*/test/*,*/test2/*" />

 
 <target name="build" 
   depends="prepare, lint, phploc, pdepend, phpmd, phpcpd, phpcs, phpdox, phpunit, phpcb"
 />


 <target name="clean" description="Cleanup build artifacts">
  <delete dir="${builddir}/api"/>
  <delete dir="${builddir}/code-browser"/>
  <delete dir="${builddir}/coverage"/>
  <delete dir="${builddir}/logs"/>
  <delete dir="${builddir}/pdepend"/>
  <delete dir="${builddir}/phpdox"/>
 </target>


 <target name="prepare" depends="clean" description="Prepare for build">
  <mkdir dir="${builddir}/api"/>
  <mkdir dir="${builddir}/code-browser"/>
  <mkdir dir="${builddir}/coverage"/>
  <mkdir dir="${builddir}/logs"/>
  <mkdir dir="${builddir}/pdepend"/>
  <mkdir dir="${builddir}/phpdox"/>
 </target>


 <target name="lint" description="Perform syntax check of sourcecode files">
  <apply executable="php" failonerror="true">
   <arg value="-l" />

   <fileset dir="${basedir}">
    <include name="**/*.php" />
    <modified />
   </fileset>
  </apply>
 </target>


 <target name="phploc" description="Measure project size using PHPLOC">
  <exec executable="phploc">
   <arg value="--log-csv" />
   <arg value="${builddir}/logs/phploc.csv" />
   <arg path="${basedir}" />
  </exec>
 </target>


 <target name="pdepend" description="Calculate software metrics using PHP_Depend">
  <exec executable="pdepend">
   <arg value="--jdepend-xml=${builddir}/logs/jdepend.xml" />
   <arg value="--jdepend-chart=${builddir}/pdepend/dependencies.svg" />
   <arg value="--overview-pyramid=${builddir}/pdepend/overview-pyramid.svg" />
   <arg path="${basedir}" />
  </exec>
 </target>


 <target name="phpmd" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
  <exec executable="phpmd">
   <arg path="${basedir}" />
   <arg value="xml" />
   <arg value="${codingstandard}/phpmd.xml" />
   <arg value="--exclude" />
   <arg value="${ignore}" />
   <arg value="--reportfile" />
   <arg value="${builddir}/logs/pmd.xml" />
  </exec>
 </target>


 <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
  <exec executable="phpcs" output="/dev/null">
   <arg value="--report=checkstyle" />
   <arg value="--report-file=${builddir}/logs/checkstyle.xml" />
   <arg value="--standard=${codingstandard}/phpcs.xml" />
   <arg value="--ignore=${ignore}" />
   <arg path="${basedir}" />
  </exec>
 </target>


 <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
  <exec executable="phpcb">
   <arg value="--log" />
   <arg path="${builddir}/logs" />
   <arg value="--source" />
   <arg path="${basedir}" />
   <arg value="--output" />
   <arg path="${builddir}/code-browser" />
  </exec>
 </target>


 <target name="phpdox" description="Generate API documentation using phpDox">
  <exec executable="phpdox">
    <arg value="--file" />
    <arg path="${basedir}/phpdox.xml" />
  </exec>
 </target>


<target name="phpcpd" description="Generate pmd-cpd.xml using PHPCPD">
  <exec executable="phpcpd">
   <arg value="--log-pmd" />
   <arg path="${builddir}/logs/pmd-cpd.xml" />
   <arg value="--exclude" />
   <arg path="${ignore}" />
   <arg path="${basedir}" />
  </exec>
 </target>


 <target name="phpunit" description="Run unit tests using PHPUnit and generates junit.xml and clover.xml">
  <exec executable="phpunit" failonerror="true">
   <arg value="--coverage-clover" /> 
   <arg path="${builddir}/logs/clover.xml" />
   <arg value="--coverage-html" /> 
   <arg path="${builddir}/logs/" />
   <arg path="${basedir}" />
  </exec>
 </target>


</project>